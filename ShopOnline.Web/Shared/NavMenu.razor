@inject IShoppingCartService ShoppingCartService
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">
            <span aria-hidden="true">
                <img src="/resources/icons/cart.svg" width="20" height="20" />
            </span>&nbsp; TechWannabe
        </a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span aria-hidden="true">
                    <img src="/resources/icons/home.svg" width="20" height="20"/>
                </span>&nbsp; Home
            </NavLink>
        </div>
        <ProductCategoriesNavMenu/>
        <div class="nav-item px-3 d-sm-none">
            <NavLink class="nav-link" href="shopping-cart">
                <span aria-hidden="true">
                    <img src="/resources/icons/cart.svg" width="20" height="20"/>
                </span>&nbsp; Cart (<b>@shoppingCartItemCount</b>)
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private int shoppingCartItemCount = 1;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        ShoppingCartService.OnShoppingCartChanged += ShoppingCartChanged;
    }

    public void ShoppingCartChanged(int totalQty)
    {
        shoppingCartItemCount = totalQty;
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        ShoppingCartService.OnShoppingCartChanged -= ShoppingCartChanged;
    }
}
